# from slitherlink import show_slitherlink, read_slitherlink
from pysat_slitherlink_binomal import pysat_slitherlink_binomal


if __name__ == '__main__':

    # slitherlink = [
    #     ". 3 .",
    #     ". 0 .",
    #     ". . .",
    # ]

    # slitherlink = [
    #     ". 1 . . 3 . 1 3",
    #     "3 . . . 3 . . .",
    #     "1 . . 2 1 . . 0",
    #     "3 . . . . . 0 .",
    #     ". . 1 . . . 1 1",
    #     ". 1 . . . . 3 .",
    #     "1 1 . . . 2 . .",
    #     ". 0 . . . . . 3",
    #     "3 . . 0 2 . . 1",
    #     ". . . 3 . . . 0",
    #     "2 3 . 1 . . 3 ."
    # ]

    # slitherlink = [
    #     ". . . . .",
    #     ". 3 2 2 3",
    #     "2 . . 0 3",
    #     "3 . . 2 3",
    #     ". . . . ."
    # ]

    # slitherlink = [
    #     "1 2 . 3 . . 2 . 2 1 . .",
    #     ". . . . . . . . . 2 3 2",
    #     "2 . . . 3 1 2 3 . 1 . 3",
    #     "1 3 . 2 . . 2 1 2 2 . .",
    #     "1 . 1 . . 1 . 2 2 . 3 .",
    #     ". 1 . . 2 2 . . . . 1 .",
    #     ". . . . . 2 3 . 2 . 3 2",
    #     "2 1 1 1 1 0 . 2 3 2 . 2",
    #     ". . . 2 2 . . . 1 . . .",
    #     "3 0 . 3 . 3 . 3 . . . 2",
    #     "3 2 . . . 1 . 1 . 0 . 2",
    #     ". 1 . 3 . 1 . . 3 . . 2"
    # ]

    # slitherlink = [
    #     ". 2 . 2 3 2 1 . 3 3 2 . 2 . . 2 . . . 0",
    #     ". . 2 1 . . . 3 0 . . . 1 3 3 . . 1 . .",
    #     "2 2 . . 2 . . . . . . . . . . . . 2 . .",
    #     "2 . 2 3 . 2 1 2 . 1 3 1 . 1 2 . 1 1 3 .",
    #     "1 2 1 . . 2 2 . 3 . . 2 . 1 . 1 . . . .",
    #     "3 . . 3 1 . 2 0 . 2 . . . . 2 . . . 3 3",
    #     ". . 2 . 2 . . . 2 1 2 1 . 2 1 . 3 . . .",
    #     ". 2 . . . 1 . . 2 . . 2 2 2 1 . . . 2 .",
    #     "3 3 2 . 2 . 1 . . . . 0 . . 3 . . . . .",
    #     ". 2 . . . 3 . 2 2 . 2 2 . 1 . . 3 3 . 3",
    #     "3 2 2 3 2 1 . 1 0 3 2 . . . 3 . . . . .",
    #     ". . 2 . . . . 3 . 2 . . . . . . 2 1 . .",
    #     ". . 1 . . . . 1 . . 2 0 . . 3 . 3 . . .",
    #     ". . 3 . 2 . 3 . 2 1 2 . 3 . 3 . 1 . 2 .",
    #     ". 2 . . . 2 2 . . 2 . . 3 2 . . . . . 2",
    #     "2 2 3 . . . 3 . 2 . . 1 3 . . . 2 . . 2",
    #     "2 . . . . 2 . . . 3 . 2 3 2 3 . 2 0 3 .",
    #     ". 1 . 2 . 3 2 . . . . 2 . . . . . . . .",
    #     ". 2 . 3 . . 2 2 2 3 . . 3 1 2 . . 3 . .",
    #     "3 . 2 . . 3 3 2 3 . . 2 . 2 2 2 . . . 3"
    # ]

    # slitherlink = [
    #     "3 2 3 2 . . . . . . 3 . 3 . 3",
    #     ". 3 2 2 2 . 2 . 2 . . . . . .",
    #     ". 1 . . . 1 1 . . . . . 2 . 2",
    #     ". 2 . . . . . . . 2 . 3 2 . .",
    #     ". 1 . 2 1 1 1 . 2 3 . 1 . . .",
    #     ". . . 2 3 1 . . . . 2 2 3 . 3",
    #     ". 2 1 1 . 2 2 . 3 . . 1 . . 3",
    #     "3 . . 2 2 . 1 . 1 . . 0 2 1 .",
    #     "3 1 . . . 3 1 2 . . 3 . 3 . 3",
    #     ". 3 . . . . . . . . . 2 1 . .",
    #     "1 . 2 . . . 2 2 1 2 2 . 2 . .",
    #     ". 3 . 2 . . 2 2 . . . 2 0 . .",
    #     "2 . . . 2 3 . . . . 2 . 2 . .",
    #     "2 . 2 2 . . 1 2 3 2 . 3 . 2 .",
    #     ". . . 2 3 . . . . . . . 3 2 3"
    # ]

    # slitherlink = [
    #     "3 . 2 . . . 3 . . . . 3 1 . . 2 . .",
    #     "2 . 1 . 1 . . 2 2 3 2 2 2 . . 2 3 2",
    #     "2 . . 3 . 1 2 2 2 1 . 2 . 3 3 1 . .",
    #     "2 . 1 . . . 3 1 2 . 2 . . . . . 3 .",
    #     "3 . 1 3 . . 2 2 1 3 . 3 1 . . 2 2 .",
    #     ". 2 . . . 2 2 . . . . . . . . 3 . .",
    #     ". . . 0 2 . . . . 3 . . 2 3 . . 1 .",
    #     "2 . . 2 . 1 . . . . 2 1 . 2 1 . 1 2",
    #     "2 2 1 . . . 0 2 . 1 . 2 3 . 2 . . .",
    #     "1 2 . 2 . . 2 3 . 1 . 2 1 2 . . . .",
    #     "1 2 . 1 . . . 1 . 3 . 2 . . 2 3 . .",
    #     ". . 2 . . 2 2 2 . 1 . 2 2 . 2 . . 1",
    #     ". . 1 2 . 1 . . 3 . . 2 3 . . 2 0 0",
    #     "3 . . 3 1 2 2 1 . . . 2 1 . 2 . 2 .",
    #     "3 1 1 3 . . 1 0 . 3 . . . 3 3 . 1 .",
    #     ". . . 3 2 . . 1 . 2 2 . . . . . 3 .",
    #     ". . . 2 2 2 . 3 2 1 . . . . . . . .",
    #     ". 2 2 2 . . 2 2 . 2 . 2 2 . . . 2 ."
    # ]

    slitherlink = []

    size = "25"
    print("Running " + size)

    with open("input\\" + size + "x30" + ".txt", "r") as file:
        lines = file.read().splitlines()
        for line in lines:
            slitherlink.append(str(line))

    pysat_slitherlink_binomal(slitherlink)
